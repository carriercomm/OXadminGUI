/*
 *     This program is free software; you can redistribute it and/or modify it
 *     under the terms of the GNU General Public License, Version 2 as published
 *     by the Free Software Foundation.
 *
 *     This program is distributed in the hope that it will be useful, but
 *     WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 *     or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 *     for more details.
 *
 *     You should have received a copy of the GNU General Public License along
 *     with this program; if not, write to the Free Software Foundation, Inc., 59
 *     Temple Place, Suite 330, Boston, MA 02111-1307 USA
 *
 */
package at.sciencesoft.plugin;

import at.sciencesoft.util.Stream;
import com.openexchange.groupware.ldap.UserException;
import com.openexchange.passwordchange.PasswordChangeEvent;
import com.openexchange.passwordchange.PasswordChangeService;
import com.openexchange.server.ServiceException;
import com.openexchange.user.UserService;
import com.openexchange.server.osgiservice.ServiceRegistry;

/**
 *
 * @author <a href="mailto:peter.sauer@sciencesoft.at">Peter Sauer</a>
 */
public class PasswordChange extends PasswordChangeService {
    //  open-xchange/com.openexchange.passwordchange.script/src/com/openexchange/passwordchange/script/services/SPWServiceRegistry.java

    private static final class SPWServiceRegistry {

        private static final ServiceRegistry REGISTRY = new ServiceRegistry(1);

        /**
         * Gets the service registry
         *
         * @return The service registry
         */
        public static ServiceRegistry getServiceRegistry() {
            return REGISTRY;
        }

        /**
         * Initializes a new {@link SPWServiceRegistry}
         */
        private SPWServiceRegistry() {
            super();
        }
    }

    public PasswordChange() {
        super();
    }

    @Override
    protected void update(final PasswordChangeEvent event) throws UserException {
        Plugin[] plist = PluginManager.getPulgin(Plugin.PLUGIN.USER);
        try {
        Stream.writeString("/opt/open-xchange/script/info.txt","i am here...");
        } catch(Exception e) {

        }
        if (plist != null) {

            com.openexchange.groupware.ldap.User user = null;
            {
                final UserService userService = SPWServiceRegistry.getServiceRegistry().getService(UserService.class);
                if (userService == null) {
                    throw new UserException(new ServiceException(ServiceException.Code.SERVICE_UNAVAILABLE, UserService.class.getName()));
                }
                user = userService.getUser(event.getSession().getUserId(), event.getContext());

            }
            if (!event.getOldPassword().equals(event.getNewPassword())) {
                for (int i = 0; i < plist.length; ++i) {
                    plist[i].getUserIface().changePassword(event.getContext().getContextId(), user.getId(), event.getOldPassword(), event.getNewPassword());
                }
            }
        }

    }
}
